1. ¿Qué es el software de sistema operativo?
Sistema operativo y controladores
Suite ofimática, navegador, y otras aplicaciones
Sistema operativo y editores de desarrollo
Editores de desarrollo e intérpretes

2. ¿Cómo se llama al código resultante de la compilación del código fuente escrito en lenguaje JAVA?
Bytecode
Código Script
Megacode
JavaScript

3. ¿Qué tipos de mantenimiento existen?
Correctivo, perfectivo, evolutivo y adaptativo
Correctivo, evolutivo, comprimido y adaptativo
Adaptativo, evolutivo, perfectivo y estratégico
Ninguna es correcta

4. ¿Cuál es el principal objetivo de la fase de pruebas en el ciclo de vida del software?
Conseguir que el programa funcione incorrectamente y que se descubran defectos
Realizar cambios ocasionales
Especificar la funcionalidad de los elementos componentes
Todas son correctas

5. ¿Cómo se jerarquizan los niveles en el modelo de desarrollo en V?

Los niveles superiores indican mayor nivel de abstracción y los inferiores mayor nivel de detalle

Los niveles superiores indican un mayo nivel de detalle y los inferiores mayor nivel de abstracción

No hay niveles de jerarquización en el modelo de desarrollo en V

Los niveles inferiores tienen menos importancia que los superiores

6. ¿Cómo se llaman los diferentes tipos de modelos de construcción de prototipos?

Rápidos y evolutivos

Espiral y bucle

Rápidos y digitales

Ninguna de las anteriores es correcta

7. ¿Cuales son ventajas del código escrito en lenguaje JAVA?

Es estructurado, orientado a objetos, es sencillo añadir nuevas funciones, y gran control sobre el 

Es universal, estable, y otorga un gran control sobre el

Es eficiente al ser universal, y muy estable

Ninguna de las respuestas anteriores es correcta

8. ¿Qué tipos de lenguajes declarativos existen?

Lógicos, funcionales y algebraicos

Lógicos, pertinentes y matemáticos

Multiparadigma, lógicos y estructurados

Declarativos e  imperativos

9. ¿Que tipo de software son los drivers?

Software de sistema

Software de aplicación

Software de desarrollo

Esta segmentado de estos tipos

10. ¿Qué tipos de código existen?

Ejecutable,objeto y fuente

Fuente, aplicación y desarrollo

Interpretado y compilado

Ninguna de las anteriores

11. ¿Cuales son las etapas del desarrollo de software?

Análisis, diseño, codificación, pruebas y mantenimiento

Análisis, especificación, codificación, pruebas y mantenimiento

Análisis, diseño, implementación, pruebas y mantenimiento

Análisis, diseño, codificación, control y mantenimiento

12. ¿En que tipo de mantenimiento se corrigen defectos?

Correctivo

Perfectivo

Evolutivo

Adaptativo

5. En el modelo de desarrollo en cascada:

No se puede llevar a cabo una tarea sin haber terminado la anterior

Se pueden llevar a cabo tareas de manera simultanea

Se puede cambiar el orden de las etapas de desarrollo
Todas son incorrectas

6. ¿A que metodología ágil pertenece el termino de Product owner?

Scrum

Kanban

Xp(Programación extrema)

No existe dicho termino


7. El modelo en espiral es:

Iterativo

Adaptativo

Predictivo

Relativo

8. Que tipos de lenguajes existen:

Compilados e interpretados

Léxico y sintáctico

Ninguno de esos existe

Fuente y compilados
<<<<<<< HEAD
1. ¿Qué es un código ejecutable?

Es un conjunto de instrucciones compiladas y enlazadas para ser ejecutadas por una computadora. Es lo que se conoce como archivos con la extensión EXE.

Es todo texto que un ser humano puede leer y escribir en un lenguaje de programación específico. El objetivo de este código es crear normas para el ordenador. Es la base de los programas y de las páginas web.

Es el código que se genera a partir del código fuente y que no se puede ejecutar. Es un lenguaje binario o bytecode que se usa para traducir el lenguaje de programación en instrucciones directas para el procesador.

Ninguna de las anteriores
2. ¿Cual de estas características no define a un software?

Para su desarrollo se utiliza un lenguaje de programación de bajo nivel.

Es un conjunto de instrucciones para el sistema informático.

Puede modificarse.

Se puede instalar y desinstalar todas las veces que quieras.
3. ¿Cuál es el propósito del ciclo de vida del software en el desarrollo de proyectos?

Identificar, gestionar y planificar el uso de recursos para alcanzar objetivos predefinidos.

Definir el lenguaje de programación a utilizar.

Establecer el diseño detallado de la interfaz de usuario.

Realizar pruebas exhaustivas del software.
4. ¿Cuáles son las fases principales del desarrollo de software según el texto?

Análisis, diseño, codificación, pruebas, mantenimiento.

Diseño, codificación, mantenimiento, verificación.

Análisis, implementación, pruebas, validación.

Planificación, desarrollo, entrega, postventa.
5. ¿Cual de estos principios rigen el desarrollo ágil?

Colaboración en lugar de negociaciones contractuales.

Enfoque en documentación completa.

Satisfacción de los procesos y herramientas.

Enfoque en evitar cambios
6. ¿Cuál es uno de los valores clave de la Programación Extrema (XP)?

Comunicación efectiva.

Enfoque en documentación extensa.

Resistencia al cambio.

Satisfacción de la burocracia.
7. ¿Cuál de las siguientes afirmaciones describe correctamente los lenguajes declarativos?

Se enfocan en especificar "qué" resultado se desea obtener, sin preocuparse por los detalles de implementación.

Se centran en describir "cómo" se debe realizar una tarea paso a paso.

Los programadores deben controlar explícitamente las variables y el flujo de ejecución del programa.

Son específicos para una arquitectura de hardware particular y requieren conocimiento profundo del hardware subyacente.
8. ¿Cuál es una ventaja de los lenguajes interpretados?

Permiten cambios en tiempo de ejecución y facilitan la experimentación.

Mayor rendimiento en tiempo de ejecución.

Requieren menos memoria y CPU durante la ejecución en comparación con los programas compilados.

Son ideales para aplicaciones de alto rendimiento, como juegos y aplicaciones científicas.
 
=======

1. ¿Cuáles son los tipos de código en el  desarrollo del software?
 Fuente, objeto y ejecutable
 Fuente, organizado y ejecutable
 Ejecutable, abstracto y Java
 C, C++ y Python

2. ¿Qué fases principales conocemos en el desarrollo del software?
 Análisis, diseño, codificación, pruebas y mantenimiento
 Análisis y experimentación
 Todas son correctas
 Ninguna de las anteriores es correcta

3. ¿Para qué sirve un disco duro?
 Almacena de forma permanente los archivos ejecutables y los archivos de datos
 Almacena de forma temporal el código binario de los archivos ejecutables y los archivos de datos necesarios
 No sirve para nada
 Para guardar películas y verlas

4. ¿Qué se hace en la fase principal de dessarrollo del software llamada codificación?
Se escribe el código fuente del programa
Se proponen opciones al  cliente para que elija la más óptima a sus necesidades
Se consigue que funcione incorrectamente el programa y así descubrir los defectos
Se atiende a las necesidades del cliente y se especifican los requisitos que debe cumplir el software

5. Tipos de modelo de desarrollo de software
Modelos clásicos, modelo de construcción de prototipos y modelos evolutivos
Modelos muro, modelos circulares y modelos cuadrados
Modelo en x y modelo paralelo
La segunda y tercera respuesta son correctas

6. Como se le denomina a la metodología Kanban
Se le denomina como el sistema de tarjetas
Se le denomina como el sistema pizarra
Se le denomina como el sistema sencillo
Ninguna de las anteriores es correcta

7. ¿Cuáles son las dos opciones para obtener código binario ejecutable?
Compilar e interpretar
Analizar y programar
Revisar e interactuar
Compilar y analizar

8. ¿Cómo se le llama al codigo binario intermedio que se obtiene en Java?
Bytecode
Bitcoin
Bits
Ball
 
1. ¿Qué es  un código objeto?

Es un archivo binario no ejecutable

Es un archivo binario ejecutable

Es un archivo de texto legible escrito en un lenguaje de programación

Ninguna de las anteriores

2. ¿A qué tipo de software pertenece un compilador?

Software de desarrollo

Software de sistema

software de aplicación

Todas son correctas

3. ¿Cuáles son las fases principales de desarrollo de software?

Análisis, Diseño, Codificación, Pruebas y Mantenimiento

Análisis, Diseño, Codificación, Mantenimiento, Pruebas y Mantenimiento

Análisis, Diseño, Codificación, Mantenimiento y Pruebas

Ninguna de las anteriores

4. ¿Qué características pertenecen al modelo en cascada?

Todas son correctas

Las fases han de indicarse en el orden indicado

Es el modelo de mayor antigüedad

Es un modelo bastante rígido que se adapta mal al cambio continuo de especificaciones

5. ¿Cuál de estos principios no rigen el desarrollo ágil?

Soluciones que no evolucionan con el tiempo según la necesidad

Individuos e interacciones sobre procesos y herramientas

Software funcionando sobre documentación extensiva

Respuesta ante el cambio sobre seguir un plan

6. ¿Cuáles son los valores de la programación externa?

Simplicidad, Comunicación, Retroalimentación, Valentía y Respeto

Simplicidad, Comunicación, Retroalimentación y Respeto

Simplicidad, Comunicación, Valentía y Respeto

Todas son incorrectas

7. ¿Cuáles de estos ejemplos son lenguajes interpretados?

PHP y Javascript

C y C++

PHP y C++

Ninguna de las anteriores

8. ¿A qué tipo de lenguaje pertenece SQL?

Es un tipo de lenguaje declarativo imperativo algebraico

Es un tipo de lenguaje imperativo estructurado

Es un tipo de lenguaje imperativo multiparadigma
    

<<<<<<< HEAD
1. ¿Qué es compilar?

Traducir un código de programación a código ejecutable

Reunir en un solo archivo

Ejecutar el código fuente directamente

Ninguna de las anteriores


2. ¿Cuál de los siguientes lenguajes es de alto nivel?

C++

Binario 

C

PSOE

HTML

3. ¿Qué es una historia de usuario?

Todas las respuestas son correctas

Es la unidad de trabajo más pequeña en un marco agil

Es una explicación general e informal de una función nde software escrita desde la perspectiva del usuario final

Estas historias deben escribirse utilizando un lenguaje no técnico para brindar contexto al equipo de desarrollo

4. ¿Cuáles son las principales desventajas de KANBAN?

Ninguna respuesta es correcta

Los tiempos de entrega

Acumulación de trabajo

La Organización del trabajo


5. ¿Qué es el código objeto?

Conjunto de instrucciones y datos escritos en un lenguaje que entiende el ordenador directamente

Código orientado para programación orientada a objetos

El código escrito directamente por los programadores en editores de texto

Es el código hexadecimal resultante de procesar con un compilador el código fuente

6. ¿Qué es la verificación?

Es comprobar que el software está de acuerdo con su especificación

Es asegurar que el software cumple las expectativas del cliente

Comprobar o ratificar que es verdadera una cosa.

Es asegurar que el Hardware cumple las expectativas del cliente

7.¿Qué es el Software De Sistemas?

Es el conjunto de programas preinstalados en un sistema informático que permiten interactuar con el sistema operativo

La parte blanda del ordenador

Es el programa que permite la construcción y el diseño de otros programas informáticos

Son los programas que no afectan al funcionamiento del ordenador

8.¿Que es el firmware?

Es el programa básico que controla los circuitos electronicos de cada dispositivo, siempre esta integrado a la electrónica

Un tipo de Hardware

Es el conjunto de códigos generados por un programador para dar resultado al programa final

Una memoria externa

=======
































































1. ¿Qué función tiene una tarjeta de RAM?

Almacenar de forma  temporal el códgo binario de los archivos ejecutables

Almacenar de forma permanente los archivos ejecutables  y los archivos de datos

Leer y ejecutar intrucciones

Recoger  datos aleatorios de tu memoria y analizarlos.

2. ¿Cuál de esto codigos es un archivo de texto legible escrito en un lenguaje de programación?

Código fuente

Código objeto

Código ejecutable

Código Binario 

3. ¿Cuál de las siguientes opciones no es un tipo de mantenimiento?

Limpiativo

Correctivo

Perfectivo

Evolutivo

4. ¿Cuál es el orden correcto de las Fases principales de desarrollo de software?

Análisis,Diseño,Codificación,Pruebas,Mantenimiento

Diseño, Análisis, Codificicación,Pruebas,Mantenimiento

Pruebas,Análisis,Diseño, Codificación, Mantenimiento

Mantenimiento,Analisis,Codificación,Extracción

5. ¿Cual de las siguientes opciones no es un modelo de sofware?

Modelo en Y

Modelo en cascada

Modelo V

Modelo en espiral

6. ¿Cuál de estas opciones  es un concepto del método SCRUM?

Todas son correctas

Es un modelo de desarrollo incremental

Iteraciones (sprint) regulares cada 2 a 4 semanas

Al finalizar cada iteración se obtiene una entrega parcial utilizable por el cliente

7. ¿Cuál de estas opciones es un lenguaje compilado?

C++

PHP

Javascript

Python

8. ¿Cuál de estas opciones no es un tipo de lenguaje declarativo?

Analógicos

Lógicos

Funcionales

Algebraicos





































































































































































1. ¿Qué función tiene una tarjeta de RAM?

Almacenar de forma  temporal el códgo binario de los archivos ejecutables

Almacenar de forma permanente los archivos ejecutables  y los archivos de datos

Leer y ejecutar intrucciones

Recoger  datos aleatorios de tu memoria y analizarlos.

2. ¿Cuál de esto codigos es un archivo de texto legible escrito en un lenguaje de programación?

Código fuente

Código objeto

Código ejecutable

Código Binario 

3. ¿Cuál de las siguientes opciones no es un tipo de mantenimiento?

Limpiativo

Correctivo

Perfectivo

Evolutivo

4. ¿Cuál es el orden correcto de las Fases principales de desarrollo de software?

Análisis,Diseño,Codificación,Pruebas,Mantenimiento

Diseño, Análisis, Codificicación,Pruebas,Mantenimiento

Pruebas,Análisis,Diseño, Codificación, Mantenimiento

Mantenimiento,Analisis,Codificación,Extracción

5. ¿Cual de las siguientes opciones no es un modelo de sofware?

Modelo en Y

Modelo en cascada

Modelo V

Modelo en espiral

6. ¿Cuál de estas opciones  es un concepto del método SCRUM?

Todas son correctas

Es un modelo de desarrollo incremental

Iteraciones (sprint) regulares cada 2 a 4 semanas

Al finalizar cada iteración se obtiene una entrega parcial utilizable por el cliente

7. ¿Cuál de estas opciones es un lenguaje compilado?

C++

PHP

Javascript

Python

8. ¿Cuál de estas opciones no es un tipo de lenguaje declarativo?

Analógicos

Lógicos

Funcionales

Algebraicos
>>>>>>> d20120e734a0c88b6c0f0e0252f7ae4cb8dc4175

1. ¿Qué es compilar?

Traducir un código de programación a código ejecutable

Reunir en un solo archivo

Ejecutar el código fuente directamente

Ninguna de las anteriores


2. ¿Cuál de los siguientes lenguajes es de alto nivel?

C++

Binario 

C

PSOE

HTML

3. ¿Qué es una historia de usuario?

Todas las respuestas son correctas

Es la unidad de trabajo más pequeña en un marco agil

Es una explicación general e informal de una función nde software escrita desde la perspectiva del usuario final

Estas historias deben escribirse utilizando un lenguaje no técnico para brindar contexto al equipo de desarrollo

4. ¿Cuáles son las principales desventajas de KANBAN?

Ninguna respuesta es correcta

Los tiempos de entrega

Acumulación de trabajo

La Organización del trabajo


5. ¿Qué es el código objeto?

Conjunto de instrucciones y datos escritos en un lenguaje que entiende el ordenador directamente

Código orientado para programación orientada a objetos

El código escrito directamente por los programadores en editores de texto

Es el código hexadecimal resultante de procesar con un compilador el código fuente

6. ¿Qué es la verificación?

Es comprobar que el software está de acuerdo con su especificación

Es asegurar que el software cumple las expectativas del cliente

Comprobar o ratificar que es verdadera una cosa.

Es asegurar que el Hardware cumple las expectativas del cliente

7.¿Qué es el Software De Sistemas?

Es el conjunto de programas preinstalados en un sistema informático que permiten interactuar con el sistema operativo

La parte blanda del ordenador

Es el programa que permite la construcción y el diseño de otros programas informáticos

Son los programas que no afectan al funcionamiento del ordenador

8.¿Que es el firmware?

Es el programa básico que controla los circuitos electronicos de cada dispositivo, siempre esta integrado a la electrónica

Un tipo de Hardware

Es el conjunto de códigos generados por un programador para dar resultado al programa final

1. ¿Qué es un código ejecutable?

Es un conjunto de instrucciones compiladas y enlazadas para ser ejecutadas por una computadora. Es lo que se conoce como archivos con la extensión EXE.

Es todo texto que un ser humano puede leer y escribir en un lenguaje de programación específico. El objetivo de este código es crear normas para el ordenador. Es la base de los programas y de las páginas web.

Es el código que se genera a partir del código fuente y que no se puede ejecutar. Es un lenguaje binario o bytecode que se usa para traducir el lenguaje de programación en instrucciones directas para el procesador.

Ninguna de las anteriores
2. ¿Cual de estas características no define a un software?

Para su desarrollo se utiliza un lenguaje de programación de bajo nivel.

Es un conjunto de instrucciones para el sistema informático.

Puede modificarse.

Se puede instalar y desinstalar todas las veces que quieras.
3. ¿Cuál es el propósito del ciclo de vida del software en el desarrollo de proyectos?

Identificar, gestionar y planificar el uso de recursos para alcanzar objetivos predefinidos.

Definir el lenguaje de programación a utilizar.

Establecer el diseño detallado de la interfaz de usuario.

Realizar pruebas exhaustivas del software.
4. ¿Cuáles son las fases principales del desarrollo de software según el texto?

Análisis, diseño, codificación, pruebas, mantenimiento.

Diseño, codificación, mantenimiento, verificación.

Análisis, implementación, pruebas, validación.

Planificación, desarrollo, entrega, postventa.
5. ¿Cual de estos principios rigen el desarrollo ágil?

Colaboración en lugar de negociaciones contractuales.

Enfoque en documentación completa.

Satisfacción de los procesos y herramientas.

Enfoque en evitar cambios
6. ¿Cuál es uno de los valores clave de la Programación Extrema (XP)?

Comunicación efectiva.

Enfoque en documentación extensa.

Resistencia al cambio.

Satisfacción de la burocracia.
7. ¿Cuál de las siguientes afirmaciones describe correctamente los lenguajes declarativos?

Se enfocan en especificar "qué" resultado se desea obtener, sin preocuparse por los detalles de implementación.

Se centran en describir "cómo" se debe realizar una tarea paso a paso.

Los programadores deben controlar explícitamente las variables y el flujo de ejecución del programa.

Son específicos para una arquitectura de hardware particular y requieren conocimiento profundo del hardware subyacente.
8. ¿Cuál es una ventaja de los lenguajes interpretados?

Permiten cambios en tiempo de ejecución y facilitan la experimentación.

Mayor rendimiento en tiempo de ejecución.

Requieren menos memoria y CPU durante la ejecución en comparación con los programas compilados.

Son ideales para aplicaciones de alto rendimiento, como juegos y aplicaciones científicas.

